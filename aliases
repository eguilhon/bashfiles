alias emc='open /Applications/Emacs.app/'
alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
alias ls='ls -laGh'
alias ..='cd ..'

alias reload='source ~/.bashrc'
alias vim="~/bin/mvim"

alias pj="cd ~/Dropbox/catskillet/Projects"
alias s="open /Applications/Safari.app/"
alias ff="open /Applications/Firefox.app/"
alias chr="open /Applications/Google\ Chrome.app/"

alias rmdot="find . -name '.*' -print0 | xargs -0 rm"

alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
function cdc() { 
    cd $1; ls 
}
alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir


function take() { 
    mkdir -p "$1"
    cd "$1" 
}

alias e='exit'
alias k9="killall -9"
function killnamed () { 
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill 
}
function zipr() {
  zip -r $1.zip $1
}


# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory




function gitignore()
{

    if [ -f .gitignore ]
    then
         rm .gitignore
    fi

    touch .gitignore

    echo *.DS_Store>> .gitignore
    echo *._AppleDouble>> .gitignore
    echo *.Spotlight-V100 >> .gitignore
    echo *.Trashes >> .gitignore
    echo *.[Tt]humb >> .gitignore
    echo *.svn >> .gitignore
    echo *.hg >> .gitignore
    echo *.pyc >> .gitignore
    echo *.lock >> .gitignore
    echo *.swp >> .gitignore
    echo *.out >> .gitignore
}

alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
# Commit pending changes and quote all args as message
function gg() { 
    git commit -v -a -m "$*"
}
alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias eg='mate .git/config'

# Git clone from GitHub

function gch() {
  git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}

# Quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}
# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}




